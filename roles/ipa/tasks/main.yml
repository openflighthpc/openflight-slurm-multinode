- name: Check hostname correct for IPA server
  fail:
    msg: "The hostname of this server ({{ ansible_fqdn }}) does not match the specified IPA server name ({{ ipa_server }}.{{ ipa_domain }})"
  when: ansible_fqdn != (ipa_server + '.' + ipa_domain)

- name: Ensure self resolvable through /etc/hosts
  blockinfile:
    path: /etc/hosts
    marker: "# {mark} OPENFLIGHT IPA HOST ENTRY - DO NOT TOUCH"
    block: |
      {{ ansible_default_ipv4.address |default(ansible_all_ipv4_addresses[0]) }}    {{ ansible_fqdn }} {{ ansible_hostname }}.{{ cluster_name }} {{ ansible_hostname }} 

- name: Allow IPA services through firewall
  firewalld:
    zone: public
    service: "{{ item }}"
    state: enabled
    permanent: yes
    immediate: true
  with_items:
    - ldap
    - ldaps
    - kerberos
    - kpasswd

- name: Allow additional IPA ports through firewall
  firewalld:
    zone: public
    port: "{{ item }}"
    state: enabled
    permanent: yes
    immediate: true
  with_items:
    - 53/udp
    - 53/tcp
    - 389/tcp
    - 636/tcp
    - 88/tcp
    - 88/udp
    - 464/tcp
    - 464/udp

- name: Ensure clean environment
  command: "ipa-server-install --uninstall -U"

- name: Install IPA server
  command: "ipa-server-install -a {{ secure_admin_password }} --hostname {{ ipa_server }}.{{ ipa_domain }} --ip-address={{ ansible_default_ipv4.address |default(ansible_all_ipv4_addresses[0]) }} -r {{ ipa_domain |upper }} -p {{ secure_admin_password }} -n {{ ipa_domain }} --no-ntp --setup-dns --forwarder={{ ansible_facts['dns']['nameservers'][0] }} --reverse-zone={{ (ansible_default_ipv4.address |default(ansible_all_ipv4_addresses[0]) |split('.'))[0:2] |reverse |join('.') }} --ssh-trust-dns --unattended"

- name: Set HBAC rules
  ipa_hbacrule:
    name: allow_all
    state: absent
    ipa_pass: "{{ secure_admin_password }}"
    ipa_host: "{{ ipa_server }}"

- name: Create Generic Cluster Hostgroup
  ipa_hostgroup: 
    name: cluster
    description: "All cluster hosts"
    state: present
    ipa_pass: "{{ secure_admin_password }}"
    ipa_host: "{{ ipa_server }}"

- name: Create SSH Pub Key for Test User
  openssh_keypair:
    path: /root/.ssh/id_testuser
  register: testuser_sshkey

- name: Add IPA Test User
  ipa_user:
    name: testuser
    state: present
    givenname: Test
    sn: User
    loginshell: /bin/bash
    sshpubkey:
      - "{{ testuser_sshkey.public_key }}"
    ipa_pass: "{{ secure_admin_password }}"
    ipa_host: "{{ ipa_server }}"

- name: Create Generic Cluster User Group
  ipa_group: 
    name: cluster-users
    description: "Generic cluster users" 
    state: present
    ipa_pass: "{{ secure_admin_password }}" 
    ipa_host: "{{ ipa_server }}"
    user:
      - testuser
    append: true

- name: Configure Generic Cluster Access Rule
  ipa_hbacrule:
    name: cluster-access
    description: "Allow user access to cluster hosts"
    state: present
    hostgroup:
      - cluster
    usergroup:
      - cluster-users
    service:
      - sshd 
    ipa_pass: "{{ secure_admin_password }}" 
    ipa_host: "{{ ipa_server }}"
