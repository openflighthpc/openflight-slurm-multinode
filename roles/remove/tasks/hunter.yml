- name: Identify node to be removed
  command: "sudo -i /opt/flight/bin/flight hunter show {{ remove_node }} --plain"
  register: hunter_show_remove
  delegate_to: localhost

- name: Check identified
  debug:
    msg: "{{ hunter_show_remove }}"

- name: Process node to be removed
  set_fact:
    hunter_node_remove: "{{ hunter_show_remove.stdout_lines | default([]) +  [ {'label' : item.split('\t').4, 'ip' : item.split('\t').2, 'fqdn': item.split('\t').1, 'groups': item.split('\t').3} ] }}"
  delegate_to: localhost

- name: Check processed
  debug:
    msg: "{{ hunter_node_remove }}"

- name: Remove node from /etc/hosts
  lineinfile:
    path: /etc/hosts
    state: absent
    line: "{{ hunter_node_remove.ip }}    {{ hunter_node_remove.fqdn }} {{ hunter_node_remove.fqdn.split('.') |first }} {{ hunter_node_remove.label }}"

- name: Identify remove node mac address
  shell: "sudo -i /opt/flight/bin/flight hunter show {{ hunter_node_remove.label }} |grep '{{ hunter_node_remove.ip }}' -B 2  |grep ':mac:' |sed 's/.*:mac: //g'"
  register: hunter_node_remove_mac
  delegate_to: localhost

- name: Remove node mac from firewall
  firewalld:
    zone: trusted
    source: "{{ hunter_node_remove_mac.stdout_lines }}"
    state: disabled
    permanent: yes
  retries: 10
  delay: 1
  until: output is not failed

- name: Remove node ip from firewall
  firewalld:
    zone: trusted
    source: "{{ hunter_node_remove.ip }}"
    state: disabled
    permanent: yes
  retries: 10
  delay: 1
  until: output is not failed

